// Get all
// const GetAllLists = async (req, res) => {
//   try {
//     const lists = await List.find();
//     res.status(200).json(lists);
//   } catch (error) {
//     console.error("Error fetching list:", error);
//     res.status(500).json({ message: "Something went wrong" });
//   }
// };

// Get one by ID
// const GetListById = async (req, res) => {
//        try {
//          if (!mongoose.Types.ObjectId.isValid(req.params.id)) {
//            return res.status(400).json({ message: "Invalid ID format" });
//          }
     
//          const list = await List.findById(req.params.id);
//          if (!list) return res.status(404).json({ message: "List not found" });
//          res.status(200).json(list);
//        } catch (error) {
//          console.error("Error fetching list:", error);
//          res.status(500).json({ message: "Something went wrong" });
//        }
//      };

// Create new
// const CreateList = async (req, res) => {
//   try {
//     const { title, list, date, time } = req.body;
//     const newEntry = new List({ title, list, date, time });
//     await newEntry.save();
//     res.status(201).json(newEntry);
//   } catch (error) {
//     res.status(500).json({ message: "Error creating list" });
//   }
// };

// Update
// const UpdateList = async (req, res) => {
//        const id = req.params.id.trim(); // âœ… trim here
//        const { title, list, date, time } = req.body;
     
//        try {
//          const updated = await List.findByIdAndUpdate(id, {
//            title,
//            list,
//            date,
//            time,
//          }, { new: true });
     
//          if (!updated) return res.status(404).send("List not found");
     
//          res.json(updated);
//        } catch (err) {
//          console.error("Update error:", err);
//          res.status(500).send("Something went wrong");
//        }
//      };
     

// Delete
// const DeleteList = async (req, res) => {
//   try {
//     const deleted = await List.findByIdAndDelete(req.params.id);
//     if (!deleted) return res.status(404).json({ message: "List not found" });
//     res.status(200).json({ message: "List deleted successfully" });
//   } catch (error) {
//     res.status(500).json({ message: "Error deleting list" });
//   }
// };